<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="homedoctor.medicine.service.ConnectServiceTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2020-03-02T08:21:32" hostname="hongnadan-ui-MacBookPro.local" time="0.379">
  <properties/>
  <testcase name="connectTest" classname="homedoctor.medicine.service.ConnectServiceTest" time="0.379"/>
  <system-out><![CDATA[17:21:28.806 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [homedoctor.medicine.service.ConnectServiceTest]
17:21:28.807 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [homedoctor.medicine.service.ConnectServiceTest]
17:21:28.807 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [homedoctor.medicine.service.ConnectServiceTest]
17:21:28.807 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [homedoctor.medicine.service.ConnectServiceTest]
17:21:28.811 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@62bd31b5 testClass = ConnectServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d43fe0c testClass = ConnectServiceTest, locations = '{}', classes = '{class homedoctor.medicine.MedicineApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2ee98448, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@33f0014, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@59532570, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@397d8e5d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
17:21:28.813 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [homedoctor.medicine.service.ConnectServiceTest]
17:21:28.813 [Test worker] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [homedoctor.medicine.service.ConnectServiceTest]
17:21:28.831 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.2.5.RELEASE)

2020-03-02 17:21:29.138  INFO 12846 --- [    Test worker] h.medicine.service.ConnectServiceTest    : Starting ConnectServiceTest on hongnadan-ui-MacBookPro.local with PID 12846 (started by hongnadan in /Users/hongnadan/IdeaProjects/home-doctor)
2020-03-02 17:21:29.140  INFO 12846 --- [    Test worker] h.medicine.service.ConnectServiceTest    : No active profile set, falling back to default profiles: default
2020-03-02 17:21:29.720  INFO 12846 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-02 17:21:29.722  INFO 12846 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-03-02 17:21:29.741  INFO 12846 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 JDBC repository interfaces.
2020-03-02 17:21:29.751  INFO 12846 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-03-02 17:21:29.752  INFO 12846 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-03-02 17:21:29.760  INFO 12846 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3ms. Found 0 JPA repository interfaces.
2020-03-02 17:21:30.286  INFO 12846 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-03-02 17:21:30.340  INFO 12846 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.12.Final
2020-03-02 17:21:30.458  INFO 12846 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-03-02 17:21:30.553  INFO 12846 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-03-02 17:21:30.733  INFO 12846 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-03-02 17:21:30.755  INFO 12846 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-03-02 17:21:31.129  INFO 12846 --- [    Test worker] org.hibernate.tuple.PojoInstantiator     : HHH000182: No default (no-argument) constructor for class: homedoctor.medicine.domain.Care (class must be instantiated by Interceptor)
2020-03-02 17:21:31.293  INFO 12846 --- [    Test worker] org.hibernate.tuple.PojoInstantiator     : HHH000182: No default (no-argument) constructor for class: homedoctor.medicine.domain.PrescriptionImage (class must be instantiated by Interceptor)
2020-03-02 17:21:31.304  INFO 12846 --- [    Test worker] org.hibernate.tuple.PojoInstantiator     : HHH000182: No default (no-argument) constructor for class: homedoctor.medicine.domain.User (class must be instantiated by Interceptor)
2020-03-02 17:21:31.319  INFO 12846 --- [    Test worker] org.hibernate.tuple.PojoInstantiator     : HHH000182: No default (no-argument) constructor for class: homedoctor.medicine.domain.Alarm (class must be instantiated by Interceptor)
2020-03-02 17:21:31.331  INFO 12846 --- [    Test worker] org.hibernate.tuple.PojoInstantiator     : HHH000182: No default (no-argument) constructor for class: homedoctor.medicine.domain.Label (class must be instantiated by Interceptor)
2020-03-02 17:21:31.338  INFO 12846 --- [    Test worker] org.hibernate.tuple.PojoInstantiator     : HHH000182: No default (no-argument) constructor for class: homedoctor.medicine.domain.ConnectCode (class must be instantiated by Interceptor)
2020-03-02 17:21:31.429 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    drop table alarm if exists
2020-03-02 17:21:31.430 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    drop table care if exists
2020-03-02 17:21:31.431 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    drop table care_care_user if exists
2020-03-02 17:21:31.432 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    drop table connect_code if exists
2020-03-02 17:21:31.432 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    drop table label if exists
2020-03-02 17:21:31.432 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    drop table medicine if exists
2020-03-02 17:21:31.433 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    drop table prescription_image if exists
2020-03-02 17:21:31.433 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    drop table user if exists
2020-03-02 17:21:31.434 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    drop sequence if exists hibernate_sequence
2020-03-02 17:21:31.436 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : create sequence hibernate_sequence start with 1 increment by 1
2020-03-02 17:21:31.437 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    create table alarm (
       alarm_id bigint not null,
        alarm_content varchar(512),
        alarm_enabled integer,
        alarm_end_df timestamp,
        alarm_repeats varchar(32),
        alarm_start_df timestamp,
        alarm_times varchar(128),
        alarm_title varchar(64),
        label_id bigint,
        user_id bigint,
        primary key (alarm_id)
    )
2020-03-02 17:21:31.438 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    create table care (
       care_id bigint not null,
        create_at date,
        user_id bigint,
        primary key (care_id)
    )
2020-03-02 17:21:31.439 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    create table care_care_user (
       care_care_id bigint not null,
        care_user_user_id bigint not null
    )
2020-03-02 17:21:31.440 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    create table connect_code (
       connect_id bigint not null,
        code varchar(45),
        life integer not null,
        user_id bigint,
        primary key (connect_id)
    )
2020-03-02 17:21:31.441 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    create table label (
       label_id bigint not null,
        label_color varchar(7),
        label_title varchar(10),
        user_id bigint,
        primary key (label_id)
    )
2020-03-02 17:21:31.442 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    create table medicine (
       medicine_id bigint not null,
        bad_effect TEXT,
        item_code bigint,
        combination_ban TEXT,
        dosage varchar(255),
        effect TEXT,
        medicine_name varchar(50),
        precautions TEXT,
        save_method varchar(255),
        valid_date varchar(255),
        primary key (medicine_id)
    )
2020-03-02 17:21:31.443 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    create table prescription_image (
       image_id bigint not null,
        image_created_at date,
        image blob,
        user_id bigint,
        primary key (image_id)
    )
2020-03-02 17:21:31.445 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    create table user (
       user_id bigint not null,
        birthday varchar(10),
        email varchar(255),
        facebook_id varchar(255),
        gender_type integer,
        google_id varchar(255),
        join_date date,
        kakao_id varchar(255),
        naver_id varchar(255),
        phone_num varchar(15),
        sns_type integer not null,
        username varchar(20),
        primary key (user_id)
    )
2020-03-02 17:21:31.446 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    alter table care_care_user 
       add constraint UK_qg6yky8prpjoyt5mydqvfqrae unique (care_user_user_id)
2020-03-02 17:21:31.447 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    alter table alarm 
       add constraint FKhe7eh1sgr25pouqf2scroc7xt 
       foreign key (label_id) 
       references label
2020-03-02 17:21:31.448 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    alter table alarm 
       add constraint FKd6g1gp6sn8nt3ku8y2mgu41vs 
       foreign key (user_id) 
       references user
2020-03-02 17:21:31.449 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    alter table care 
       add constraint FK61fm66x53xntjxx0vu851t0jg 
       foreign key (user_id) 
       references user
2020-03-02 17:21:31.450 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    alter table care_care_user 
       add constraint FKhvce1pqujoe3hvag3u73s0vx9 
       foreign key (care_user_user_id) 
       references user
2020-03-02 17:21:31.452 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    alter table care_care_user 
       add constraint FKoyq9iag7kdst2hlf98fqcwhit 
       foreign key (care_care_id) 
       references care
2020-03-02 17:21:31.453 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    alter table connect_code 
       add constraint FKqf008wyt3ejckgbhc5itan9u2 
       foreign key (user_id) 
       references user
2020-03-02 17:21:31.454 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    alter table label 
       add constraint FKoxgv2i3tt8m6y1pyfmutblhf2 
       foreign key (user_id) 
       references user
2020-03-02 17:21:31.456 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    
    alter table prescription_image 
       add constraint FK7ka774p4qm2jbvnpj4nppvqec 
       foreign key (user_id) 
       references user
2020-03-02 17:21:31.458  INFO 12846 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-03-02 17:21:31.464  INFO 12846 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-03-02 17:21:31.822  WARN 12846 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-03-02 17:21:32.015  INFO 12846 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-03-02 17:21:32.471  INFO 12846 --- [    Test worker] h.medicine.service.ConnectServiceTest    : Started ConnectServiceTest in 3.63 seconds (JVM running for 4.574)
2020-03-02 17:21:32.567  INFO 12846 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62bd31b5 testClass = ConnectServiceTest, testInstance = homedoctor.medicine.service.ConnectServiceTest@510e1ac3, testMethod = connectTest@ConnectServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d43fe0c testClass = ConnectServiceTest, locations = '{}', classes = '{class homedoctor.medicine.MedicineApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2ee98448, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@33f0014, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@59532570, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@397d8e5d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@181cece4]; rollback [true]
2020-03-02 17:21:32.804 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_7_,
        user0_.birthday as birthday2_7_,
        user0_.email as email3_7_,
        user0_.facebook_id as facebook4_7_,
        user0_.gender_type as gender_t5_7_,
        user0_.google_id as google_i6_7_,
        user0_.join_date as join_dat7_7_,
        user0_.kakao_id as kakao_id8_7_,
        user0_.naver_id as naver_id9_7_,
        user0_.phone_num as phone_n10_7_,
        user0_.sns_type as sns_typ11_7_,
        user0_.username as usernam12_7_ 
    from
        user user0_ 
    where
        user0_.username=?
2020-03-02 17:21:32.816 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    call next value for hibernate_sequence
2020-03-02 17:21:32.841 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        user
        (birthday, email, facebook_id, gender_type, google_id, join_date, kakao_id, naver_id, phone_num, sns_type, username, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-03-02 17:21:32.847 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    select
        user0_.user_id as user_id1_7_,
        user0_.birthday as birthday2_7_,
        user0_.email as email3_7_,
        user0_.facebook_id as facebook4_7_,
        user0_.gender_type as gender_t5_7_,
        user0_.google_id as google_i6_7_,
        user0_.join_date as join_dat7_7_,
        user0_.kakao_id as kakao_id8_7_,
        user0_.naver_id as naver_id9_7_,
        user0_.phone_num as phone_n10_7_,
        user0_.sns_type as sns_typ11_7_,
        user0_.username as usernam12_7_ 
    from
        user user0_ 
    where
        user0_.username=?
2020-03-02 17:21:32.849 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    call next value for hibernate_sequence
2020-03-02 17:21:32.860 DEBUG 12846 --- [    Test worker] org.hibernate.SQL                        : 
    call next value for hibernate_sequence
2020-03-02 17:21:32.874  INFO 12846 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@62bd31b5 testClass = ConnectServiceTest, testInstance = homedoctor.medicine.service.ConnectServiceTest@510e1ac3, testMethod = connectTest@ConnectServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1d43fe0c testClass = ConnectServiceTest, locations = '{}', classes = '{class homedoctor.medicine.MedicineApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2ee98448, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@33f0014, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@59532570, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@397d8e5d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
